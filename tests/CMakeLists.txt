set (CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake)

# add_executable (test_layout test_layout.cpp)

# find_package (RocksDB)
# if (RocksDB_FOUND)
#   include_directories (${RocksDB_INCLUDE_DIR})
#   add_executable (test_rocksdb test_storage.cpp)
#   target_link_libraries (test_storage_rocksdb ${RocksDB_LIBRARY})
#   set_target_properties (test_storage_rocksdb PROPERTIES COMPILE_FLAGS "-DFTK_USE_ROCKSDB")
# endif ()

# find_package (LevelDB)
# if (LevelDB_FOUND)
#   include_directories (${LevelDB_INCLUDE_DIR})
#   add_executable (test_leveldb test_storage.cpp)
#   target_link_libraries (test_storage_leveldb ${LevelDB_LIBRARY})
#   set_target_properties (test_storage_leveldb PROPERTIES COMPILE_FLAGS "-DFTK_USE_LEVELDB")
# endif ()

# find_package (NetCDF)
# if (NETCDF_FOUND)
#   include_directories (${NETCDF_INCLUDE_DIR})
#   add_executable (test_parallel_vector2 test_parallel_vector2)
#   target_link_libraries (test_parallel_vector2 ${NETCDF_LIBRARY})
#   add_executable (test_parallel_vector3 test_parallel_vector3)
#   target_link_libraries (test_parallel_vector3 ${NETCDF_LIBRARY})
# endif ()

# add_executable (test_storage_fs test_storage.cpp)
# add_executable (test_sweep_and_merge test_sweep_and_merge.cpp)
# add_executable (test_invmat2 test_invmat2.cpp)
# add_executable (test_invmat3 test_invmat3.cpp)
# add_executable (test_invmat4 test_invmat4.cpp)
# add_executable (test_eig2 test_eig2.cpp)
# add_executable (test_eig3 test_eig3.cpp)
# add_executable (test_polynomial test_polynomial.cpp)
# add_executable (test_rational test_rational.cpp)
# add_executable (test_eig4 test_eig4.cpp)
# add_executable (test_det3 test_det3.cpp)
# add_executable (test_det4 test_det4.cpp)
# add_executable (test_cubic_solve test_cubic_solve.cpp)
# add_executable (test_quartic_solve test_quartic_solve.cpp)
# add_executable (test_norm2 test_norm2.cpp)
# add_executable (test_lambda2 test_lambda2.cpp)
# add_executable (test_parallel_vector_solver test_parallel_vector_solver.cpp)
# add_executable (test_parallel_vector_solver2 test_parallel_vector_solver2.cpp)
# add_executable (test_parallel_vector_solver3 test_parallel_vector_solver3.cpp)
# add_executable (test_parallel_vector_solver4 test_parallel_vector_solver4.cpp)
# add_executable (test_mesh_graph test_mesh_graph.cpp)
# add_executable (test_interval test_interval.cpp)
# add_executable (test_interpolation test_interpolation.cpp)

# Load settings for the gtest project.
# set (GTEST_ROOT "" CACHE PATH "The root directory of the gtest install prefix.")
# find_package (GTest REQUIRED)
# include_directories ("${GTEST_INCLUDE_DIRS}")

# Add the test's executables to the project.
# add_executable (test_mat test_mat.cpp)

# target_link_libraries (test_mat ${GTEST_BOTH_LIBRARIES})

# Add tests to the project.
# add_test (AllTestsInMatrix test_mat)
