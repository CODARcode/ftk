language: cpp

os: linux
dist: bionic

jobs:
  include:
    - name: build without external dependencies (linux)
      os: linux
      dist: bionic

    - name: build without external dependencies (osx)
      os: osx
      osx_image: xcode11

    - name: build with mpsolve (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libgmp-dev
      before_install:
        - sh tests/travis/install-mpsolve.sh
      env:
        - CMAKE_ARG="-DFTK_USE_MPSolve=ON -DMPSolve_INCLUDE_DIR=/tmp/MPSolve-3.2.1/include -DMPSolve_LIBRARY=/tmp/MPSolve-3.2.1/lib/libmps.so"

    - name: build with netcdf (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libnetcdf-dev
      env: 
        - CMAKE_ARG="-DFTK_USE_NETCDF=ON"

    - name: build with tbb (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libtbb-dev
      env: 
        - CMAKE_ARG="-DFTK_USE_TBB=ON"

    - name: build with hdf5 (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libhdf5-dev
      env: 
        - CMAKE_ARG="-DFTK_USE_HDF5=ON"

    - name: build with vtk (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libvtk7-dev
      env: 
        - CMAKE_ARG="-DFTK_USE_VTK=ON"
    
    - name: build with netcdf, hdf5, and vtk (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libnetcdf-dev
            - libhdf5-dev
            - libvtk7-dev
      env: 
        - CMAKE_ARG="-DFTK_USE_MPI=ON -DFTK_USE_HDF5=ON -DFTK_USE_VTK=ON"

    - name: build with mpsolve, netcdf, hdf5, and vtk (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libnetcdf-dev
            - libhdf5-dev
            - libvtk7-dev
      before_install:
        - sh tests/travis/install-mpsolve.sh
      env:
        - CMAKE_ARG="-DFTK_USE_MPI=ON -DFTK_USE_HDF5=ON -DFTK_USE_VTK=ON -DFTK_USE_MPSolve=ON -DMPSolve_INCLUDE_DIR=/tmp/MPSolve-3.2.1/include -DMPSolve_LIBRARY=/tmp/MPSolve-3.2.1/lib/libmps.so"

    - name: build with mpich (osx)
      os: osx
      before_install:
        - sh tests/travis/install-mpich.sh
        # - brew install mpich
      osx_image: xcode11

    - name: build with mpich (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libmpich-dev
      env: 
        - CMAKE_ARG="-DFTK_USE_MPI=ON"

    - name: build with openmpi (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libopenmpi-dev
      env: 
        - CMAKE_ARG="-DFTK_USE_MPI=ON"

    - name: build with mpsolve, netcdf, hdf5, vtk, and mpich (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libnetcdf-dev
            - libhdf5-dev
            - libvtk7-dev
            - libmpich-dev
      before_install:
        - sh tests/travis/install-mpsolve.sh
      env: 
        - CMAKE_ARG="-DFTK_USE_MPI=ON -DFTK_USE_HDF5=ON -DFTK_USE_VTK=ON -DFTK_USE_MPSolve=ON -DMPSolve_INCLUDE_DIR=/tmp/MPSolve-3.2.1/include -DMPSolve_LIBRARY=/tmp/MPSolve-3.2.1/lib/libmps.so"

    - name: build with mpsolve, netcdf, hdf5, vtk, and openmpi (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libnetcdf-dev
            - libhdf5-dev
            - libvtk7-dev
            - libopenmpi-dev
      before_install:
        - sh tests/travis/install-mpsolve.sh
      env: 
        - CMAKE_ARG="-DFTK_USE_MPI=ON -DFTK_USE_HDF5=ON -DFTK_USE_VTK=ON -DFTK_USE_MPSolve=ON -DMPSolve_INCLUDE_DIR=/tmp/MPSolve-3.2.1/include -DMPSolve_LIBRARY=/tmp/MPSolve-3.2.1/lib/libmps.so"

    - name: build with cuda10 (linux)
      os: linux
      dist: bionic
      before_install:
        - sh tests/travis/install-cuda.sh
      env: 
        - CUDA=10.1.105-1
        - CUDA_SHORT_VER=10-1
        - CUDA_SHORT=10.1
        - UBUNTU_VERSION=ubuntu1804
        - CPATH=/usr/local/cuda-10.1/include
        - CMAKE_ARG="-DFTK_USE_CUDA=ON -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-10.1"

    - name: build with mpsolve, netcdf, hdf5, vtk, cuda10, and mpich (linux)
      os: linux
      dist: bionic
      addons:
        apt:
          packages:
            - libnetcdf-dev
            - libhdf5-dev
            - libvtk7-dev
            - libmpich-dev
      before_install:
        - sh tests/travis/install-mpsolve.sh
        - sh tests/travis/install-cuda.sh
      env: 
        - CUDA=10.1.105-1
        - CUDA_SHORT_VER=10-1
        - CUDA_SHORT=10.1
        - UBUNTU_VERSION=ubuntu1804
        - CPATH=/usr/local/cuda-10.1/include
        - CMAKE_ARG="-DFTK_USE_MPI=ON -DFTK_USE_HDF5=ON -DFTK_USE_VTK=ON -DFTK_USE_MPSolve=ON -DFTK_USE_CUDA=ON -DMPSolve_INCLUDE_DIR=/tmp/MPSolve-3.2.1/include -DMPSolve_LIBRARY=/tmp/MPSolve-3.2.1/lib/libmps.so -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-10.1"

  allow_failures:
    - name: build with vtk (osx)
      env: 
        - CMAKE_ARG="-DFTK_USE_VTK=ON"
      os: osx
      before_install:
        - brew install vtk
      osx_image: xcode11

before_script:
  - mkdir build
  - cd build
  - cmake .. -DFTK_BUILD_TESTS=ON ${CMAKE_ARG}
  - cmake --build .

script: 
  - ctest

notifications:
  email:
    - guohanqi@gmail.com
